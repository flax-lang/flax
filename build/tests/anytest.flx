// anytest.flx
// Copyright (c) 2014 - 2016, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

export test_any
// import "stdio" as _

import libc as _

var glob: any

struct Large
{
	a: i64
	b: i64
	c: i64
	d: i64
	e: i64
}

public fn doAnyTest()
{
	fn foo(a: any)
	{
		if(a is Large)
		{
			printf("a = %d\n", (a as Large).a)
			glob = a
		}
		else
		{
			printf("not large\n")
		}
	}

	do {
		var k: any = any(40)
		k = "foo"

		printf("k as int = %s\n", k as str)

		k = 301

		printf("k as int = %d\n", k as int)

		printf("typeid(k): %d\n", typeid(k))
	}

	do {
		var x: any = Large(10, 20, 30, 40, 50)

		var k = x as Large
		k.c = 173
		k.a = 631

		foo(x)
		foo(k)
		foo(401.3)

		fn bar() -> any => any(10)

		printf("bar = %d, qux = %d\n", bar() as int, 30)
		printf("a = %d, b = %d, c = %d/%x, d = %d, e = %d\n", k.a, k.b, k.c, (x as Large).c, k.d, k.e)
	}
}






