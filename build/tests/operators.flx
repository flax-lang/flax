// operators.flx
// Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

import Math
import Foundation

public func doOperatorTupleTest()
{
	let g: Int8 = 100
	printf("g is: %d\n", g)

	let m = (fa(), fb())
	printf("m is [(%f, %f, %f), (%f, %f, %f)]\n", m.0.x, m.0.y, m.0.z, m.1.x, m.1.y, m.1.z)


	let dot = m.0 â€¢ m.1
	printf("dot = %f\n", dot);


	let v1: Math.Vector3(1.0, 2.0, 4.0)
	let v2: Math.Vector3(3.0, 6.0, 9.0)

	var v = v1 + v2
	printf("v: (%f, %f, %f)\n", v.x, v.y, v.z)
	v += v1

	v = v1 + v2 + v1

	let vv = 3 * v
	printf("v: (%f, %f, %f)\n", v.x, v.y, v.z)
	printf("vv: (%f, %f, %f)\n", vv.x, vv.y, vv.z)

	let cross = m.0 x m.1
	printf("cross = (%f, %f, %f)\n", cross.x, cross.y, cross.z)


	let crossn = m.1 x m.0
	printf("crossn = (%f, %f, %f)\n", crossn.x, crossn.y, crossn.z)
}



func fa() -> Math.Vector3
{
	var ret: Math.Vector3
	ret.x = 1
	ret.y = 2
	ret.z = 3

	return ret
}

func fb() -> Math.Vector3
{
	var ret: Math.Vector3
	ret.x = 4
	ret.y = 5
	ret.z = 6

	return ret
}





