// defer.flx
// Copyright (c) 2014 - 2016, zhiayang
// Licensed under the Apache License Version 2.0.

export test_defer
import libc as _


public fn doDeferTest()
{
	bar()

	var i = 0
	while true
	{
		defer i += 1

		if i > 15 => break

		printf("%d ", i)
	}
	printf("\n")
}


fn foo(x: int) -> int
{
	printf("calling foo %d\n", x)
	return 2 * x
}


fn bar() -> int
{
	// numbered by *correct* order of appearance.
	// defer should execute after the return.

	foo(1)
	defer foo(3)
	return foo(2)
}


