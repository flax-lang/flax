// supertiny.flx
// Copyright (c) 2014 - 2017, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

export supertiny

import "libc" as _

fn timestwo(x: int) -> int => x * 2

struct vec2 { var x: int; var y: int }

// postfix operator $
prefix operator %
// infix operator ++


operator infix + (x: vec2, y: vec2) -> vec2
{
	var ret: vec2
	ret.x = x.x + y.x
	ret.y = x.y + y.y

	return ret
}

operator prefix % (x: vec2) -> vec2
{
	var ret: vec2
	ret.x = x.x * x.x
	ret.y = x.y * x.y

	return ret
}

@entry fn main()
{
	var a: vec2; a.x = 10; a.y = 20;
	var b: vec2; b.x = 23; b.y = 17;

	let c = a + b

	let d = %c
	printf("c = (%d, %d), (%d, %d)\n", c.x, c.y, d.x, d.y)
}




