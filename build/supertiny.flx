// supertiny.flx
// Copyright (c) 2014 - 2017, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

export supertiny
import "IntegerLimits.flx"
import "LibCInterface.flx"

// ffi fn printf(fmt: u8*, ...) -> i32

fn foo(a: int, b: int)
{
	printf("ONE\n")
}

fn foo(a: int)
{
	printf("TWO\n")
}


fn bar1() -> bool
{
	printf("BAR ONE\n")
	return true
}

fn bar2() -> bool
{
	printf("BAR TWO\n")

	if true { }
	else if false { }

	return true
}

@entry fn main(argc: i32, argv: i8**) -> void
{
	// var bar = -(401 + 76.1) as f64
	// var qux = 30

	// var fun: (int, int) -> void = foo

	// fun(30, 30)

	// printf("bar = %.1f, &bar = %p, qux = %d\n", bar, &bar, *&qux)
	// printf(@r"%s, %d, not-bar = %f\n", @r"Hello, World", -34, 1.1 - 4.5)
	// printf("end\n")

	// foo(10)
	// foo(10, 20)


	// var one = 40
	// let op = &one

	3 + 1

	var str = "foo, bar"
	// str[0] = 65


	printf("str = '%s'\n", str);
	printf("str[0] = '%c'\n", str[0])

	if(var k = 2; bar1() || bar2())
	{
		printf("k < 3\n")

		if(10 > 30)
		{
			printf("TRUE\n")
		}
		else
		{
			printf("FALSE\n")
		}
	}
	else if(var m = 40; m > 1)
	{
		printf("m > 1\n");
	}
	else
	{
		printf("else: k = %d, m = %d\n", k, m)
	}

	// printf("k = %d\n", k)
}











