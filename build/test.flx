// test.flx
// Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

import Foundation

var m = 40

struct Bar
{
	var norf: Int = 1600
	var yorg: Int = 5000
	var goop: Int = 6810

	static func unNest() -> Int
	{
		return 581
	}

	struct Nested
	{
		var g: Int = 500

		struct Nest2
		{
			var m: Int = 230
			func doShit() -> Int
			{
				println("doing shit...")
				return 47
			}

			static func staticFunc() -> Int
			{
				println("Doing some shit of a static nature...")
				return 74
			}
		}
	}

	init(q: Int, a: Int)
	{
		self.qux = q
		self.aaa = a
	}
}

extension Bar
{
	var qux: Int = 500
	var aaa: Int = 1000

	init()
	{
		self.init(100, 300)
	}

	func fwoosh()
	{
		println("Fwoosh! The joke goes over your head.");
	}

	var poog: Int
	{
		get
		{
			return 500
		}
		set(fag)
		{
			self.norf = fag / 4
		}
	}
}

func main(argc: Int32, argv: Int8**) -> Int
{
	defer printf("g: %d\n", g)
	defer val g = 54

	var k: Bar.Nested
	var j: Bar.Nested.Nest2
	printf("%d, %d, %d, %d\n", k.g, Bar.unNest(), j.doShit(), Bar.Nested.Nest2.staticFunc())

	return 0
}











