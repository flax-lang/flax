// test.flx
// Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

import Foundation

namespace Thing::Troll
{
	func test()
	{
		return
	}

	struct Floby
	{
		var haha: Int = 691
		init(d: Int)
		{
			self.haha = d
		}
		init()
		{
		}
		func food() -> Int
		{
			return 1058
		}
	}
}

struct Bar
{
	var norf: Int = 1600
}

extension Bar
{
	var qux: Int = 500
	var aaa: Int = 1000
}

struct Foo
{
	var flob: Bar
	var bar: Int = 400
	var qux: Int

	init(q: Int)
	{
		self.qux = q as Int
		self.flob.norf = (q * 400) as Int
	}

	init()
	{
		self.qux = 800
		self.flob.norf = 800 * 3
	}
}

func mult(x: Int) -> Int { x * 2 }
func main(argc: Int32, argv: Int8**) -> Int
{
	var x = "Hello, \() World\n"
	x = ""

	var k: Bar

	printf("[%d, %d]\n", k.qux, k.aaa)
	printf("%d: %s\n", x.length, x.bytes)

	return 0
}





