// test.flx
// Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

// import Foundation
import Utilities

// printing
public ffi func puts(x: Int8*) -> Int32
public ffi func printf(x: Int8*, ...) -> Int32

// memcpy/set/move
public ffi func memcpy(dest: Int8*, source: Int8*, length: Uint64) -> Int8*

// string ops (todo: write in Flax)
public ffi func strlen(str: Int8*) -> Uint64

// memory
public ffi func malloc(size: Uint64) -> Int8*
public ffi func free(pointer: Int8*)



namespace Thing::Troll
{
	func test()
	{
		printf("TESTING\n")
	}

	struct Flob
	{
		var haha: Int32 = 691
		func food() -> Int32
		{
			return 1058
		}
	}
}

struct Bar
{
	var norf: Int32 = 1600
}

struct Foo
{
	var flob: Bar
	var bar: Int32 = 400
	var qux: Int32

	init(q: Int32)
	{
		self.qux = q
		self.flob.norf = q * 400
	}
	init()
	{
		self.qux = 800
		self.flob.norf = 800 * 3
	}
}

func main(argc: Int32, argv: Int8**) -> Int32
{
	// var x: String("Hello, World")
	// x.clear()

	// printf("[%s]\n", x.data)


	var d: Flob
	printf("%d\n", d.haha)

	Thing::Troll::test()
	return 0
}







