// test.flx
// Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

import Foundation
import tests.fizzbuzz
import tests.recursiveFib
import tests.scopes
import tests.arraytest

@nomangle ƒ someFunc(a: String)
{
	printf("some: %s\n\n", a)
}

ƒ runTests()
{
	// fib
	printf("*** FIBONACII SEQUENCE ***\n")

	var n = 0
	while n < 20
	{
		printf("%d: %lld\n", n, doRecursiveFib(n))
		n += 1
	}
	printf("\n\n");


	// fizzbuzz
	printf("*** FIZZBUZZ ***\n")
	doFizzBuzz(20);
	printf("\n\n");


	// scopes
	printf("*** SCOPE RESOLUTION REGRESSION TEST ***\n")
	doScopeTest("__llvm_jit__build/test")
	printf("\n\n");


	// arrays
	printf("*** ARRAY REGRESSION TEST ***\n")
	doArrayTest()
	printf("\n\n")


	printf("*** STRING TEST ***\n")
	someFunc(@raw "SOME STRING" as String)
	printf("\n\n")
}


// ƒ foo<T>(a: T, b: T) -> T
// {
// 	return a + b
// }

ƒ foo<K, T>(a: K, b: T) -> K
{
	let ret = alloc[128] Int8
	sprintf(ret, "%s, %d", a, b)

	return K(ret)
}

func main(argc: Int32, argv: Int8**) -> Int
{
	runTests()
	printf("========= TESTS COMPLETE =========\n\n")

	let k = foo("HELLO", 70)
	// var s = "HELLO" + foo(", WORLD")
	var s = "HELLO, WORLD"
	s += "! YOU'RE A POOP."

	printf("%s\nk: %s\n", s.data, k)


	return 0
}




























