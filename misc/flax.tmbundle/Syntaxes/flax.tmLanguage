<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>flx</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bflx</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>Flax</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#shebang-line</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attribute</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#storage-type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#boolean</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#access-modifier</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>arithmetic-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+|\-|\*|\/|≠|÷|≥|≤|#|&lt;\||\|&gt;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.flax</string>
		</dict>
		<key>assignment-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+|\-|\*|\/|%|&lt;&lt;|&gt;&gt;|&amp;|\^|\||&amp;&amp;|\|\|)?=(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.assignment.flax</string>
		</dict>
		<key>attribute</key>
		<dict>
			<key>comment</key>
			<string>attribute</string>
			<key>name</key>
			<string>meta.attribute.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>((@)(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B))(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.tag</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute.flax</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute-arguments.begin.flax</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.attribute.arguments.flax</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute-arguments.end.flax</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.attribute.flax</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute.flax</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@)(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B))</string>
				</dict>
			</array>
		</dict>
		<key>bitwise-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(&amp;|\||\^|&lt;&lt;|&gt;&gt;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.bitwise.flax</string>
		</dict>
		<key>block-comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<!-- recurse to support nested comments -->
					<string>#block-comment</string>
				</dict>
			</array>
			<key>name</key>
			<string>comment.block.flax</string>
		</dict>
		<key>boolean</key>
		<dict>
			<key>match</key>
			<string>\b(true|false|null)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.boolean.flax</string>
		</dict>
		<key>branch-statement-keyword</key>
		<dict>
			<key>name</key>
			<string>keyword.control.branch.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#if-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#switch-statement-keyword</string>
				</dict>
			</array>
		</dict>
		<key>code-block</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.code-block.begin.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>code-block</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.code-block.end.flax</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>comment</key>
			<string>All comment types</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#documentation-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#in-line-comment</string>
				</dict>
			</array>
		</dict>
		<key>comparative-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])((=|!)==?|(&lt;|&gt;)=?|~=)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.comparative.flax</string>
		</dict>
		<key>control-transfer-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>control-transfer-statement</string>
			<key>match</key>
			<string>\b(continue|break|fallthrough|return)\b</string>
			<key>name</key>
			<string>keyword.control.transfer.flax</string>
		</dict>
		<key>custom-operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=[\s(\[{,;:])([/=\-+!*%&lt;&gt;&amp;|\^~.]++)(?![\s)\]},;:])</string>
					<key>name</key>
					<string>keyword.operator.custom.prefix.unary.flax</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![\s(\[{,;:])([/=\-+!*%&lt;&gt;&amp;|\^~.]++)(?![\s)\]},;:\.])</string>
					<key>name</key>
					<string>keyword.operator.custom.postfix.unary.flax</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=[\s(\[{,;:])([/=\-+!*%&lt;&gt;&amp;|\^~.]++)(?=[\s)\]},;:])</string>
					<key>name</key>
					<string>keyword.operator.custom.binary.flax</string>
				</dict>
			</array>
		</dict>
		<key>declaration</key>
		<dict>
			<key>comment</key>
			<string>declaration</string>
			<key>name</key>
			<string>meta.declaration.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#import-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-declaration</string>
				</dict>
			</array>
		</dict>
		<key>declaration-specifier</key>
		<dict>
			<key>comment</key>
			<string>declaration-specifier</string>
			<key>match</key>
			<string>\b(class|mutating|nonmutating|override|static|unowned((un)?safe)?|weak)\b</string>
			<key>name</key>
			<string>keyword.other.declaration-specifier.flax</string>
		</dict>
		<key>documentation-comment</key>
		<dict>
			<key>begin</key>
			<string>/\*\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.documentation.begin.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Documentation comment</string>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.documentation.end.flax</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.documentation.flax</string>
		</dict>
		<key>floating-point-literal</key>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F_]*)|(([0-9_]+\.?[0-9_]*)|(\.[0-9_]+))((e|E)(\+|-)?[0-9_]+)?)([LlFfUuDd]|UL|ul)?\b</string>
			<key>name</key>
			<string>constant.numeric.swift</string>
		</dict>
		<key>function-body</key>
		<dict>
			<key>comment</key>
			<string>function-body</string>
			<key>name</key>
			<string>meta.function-body.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#code-block</string>
				</dict>
			</array>
		</dict>
		<key>function-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(fn|ƒ)\s+(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+)\s*(?=\(|&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.flax</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.type.function.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function-declaration</string>
			<key>end</key>
			<string>(?&lt;=\}|\n|\{)</string>
			<key>name</key>
			<string>meta.function-declaration.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#generic-parameter-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameter-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-result</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-body</string>
				</dict>
			</array>
		</dict>
		<key>function-result</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\-&gt;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-result.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function-result</string>
			<key>end</key>
			<string>\s*(\{|\n)</string>
			<key>name</key>
			<string>meta.function-result.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
		</dict>
		<key>generic-parameter-clause</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.generic-parameter-clause.begin.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>generic-parameter-clause</string>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.generic-parameter-clause.end.flax</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.generic-parameter-clause.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>comment</key>
			<string>identifier</string>
			<key>match</key>
			<string>(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B)</string>
			<key>name</key>
			<string>meta.identifier.flax</string>
		</dict>
		<key>if-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>if-statement</string>
			<key>match</key>
			<string>\b(if|else)\b</string>
			<key>name</key>
			<string>keyword.control.if.flax</string>
		</dict>
		<key>import-declaration</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.flax</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.flax</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.type.module.import.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>import-declaration</string>
			<key>match</key>
			<string>\b(import)\s+(?:(typealias|struct|class|namespace|enum|protocol|var|fn)\s+)?((?:\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+)(?:\.(?:\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+))*)</string>
			<key>name</key>
			<string>meta.import.flax</string>
		</dict>
		<key>in-line-comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.line.double-slash.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>In-line comment</string>
			<key>match</key>
			<string>(//).*</string>
			<key>name</key>
			<string>comment.line.double-slash.flax</string>
		</dict>
		<key>increment-decrement-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+\+|\-\-)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.increment-or-decrement.flax</string>
		</dict>
		<key>integer-literal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>binary-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0b[01][01_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.binary.flax</string>
				</dict>
				<!-- <dict>
					<key>comment</key>
					<string>decimal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)([0-9][0-9_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.decimal.flax</string>
				</dict> -->
				<dict>
					<key>comment</key>
					<string>hexadecimal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0x\h[\h_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.flax</string>
				</dict>
			</array>
		</dict>
		<key>keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#branch-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#control-transfer-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loop-statement-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#declaration-specifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator-declaration-keyword</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>declaration keyword</string>
					<key>match</key>
					<string>\b(class|deinit|enum|extension|fn|import|init|let|protocol|static|struct|subscript|typealias|var|typeof|typeid|sizeof)\b</string>
					<key>name</key>
					<string>keyword.declaration.flax</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>statement keyword</string>
					<key>match</key>
					<string>\b(break|case|continue|default|do|loop|else|fallthrough|if|in|for|return|switch|where|while|defer)\b</string>
					<key>name</key>
					<string>keyword.statement.flax</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>expression and type keyword</string>
					<key>match</key>
					<string>\b(as|dynamicType|is|super|self|Self)\b</string>
					<key>name</key>
					<string>keyword.other.statement.flax</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>other keyword</string>
					<key>match</key>
					<string>\b(associativity|didSet|get|infix|inout|mutating|none|nonmutating|operator|override|postfix|precedence|prefix|set|unowned((un)?safe)?|weak|willSet)\b</string>
					<key>name</key>
					<string>keyword.other.flax</string>
				</dict>
			</array>
		</dict>
		<key>literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#integer-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#floating-point-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#special-literal</string>
				</dict>
			</array>
		</dict>
		<key>logical-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(!|&amp;&amp;|\|\|)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.logical.flax</string>
		</dict>
		<key>loop-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>loop-statement</string>
			<key>match</key>
			<string>\b(while|do|for|in)\b</string>
			<key>name</key>
			<string>keyword.control.loop.flax</string>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comparative-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#assignment-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logical-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#remainder-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#increment-decrement-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#overflow-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bitwise-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arithmetic-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ternary-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-casting-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#custom-operator</string>
				</dict>
			</array>
		</dict>
		<key>operator-declaration-keyword</key>
		<dict>
			<key>comment</key>
			<string>operator-declaration</string>
			<key>match</key>
			<string>\b(operator|prefix|infix|postfix)\b</string>
			<key>name</key>
			<string>keyword.other.operator.flax</string>
		</dict>
		<key>optional-type</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.optional.flax</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.optional.begin.flax</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.optional.end.flax</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(Optional)(&lt;)</string>
			<key>name</key>
			<string>meta.optional.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>overflow-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\&amp;(\+|\-|\*|\/|%)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.overflow.flax</string>
		</dict>
		<key>parameter-clause</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function-arguments.begin.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>parameter-clause</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function-arguments.end.flax</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.parameter-clause.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>primitive-type</key>
		<dict>
			<key>comment</key>
			<string>Primitive types</string>
			<key>match</key>
			<string>\b(((u|i)(8|16|32|64|128))|(u?)int|intptr|f(32|64|80|128)|float|double|bool|void|string|char|any|Type|ffi|ustring|rune|value)\b</string>
			<key>name</key>
			<string>support.type.flax</string>
		</dict>
		<key>protocol-composition-type</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.protocol.flax</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.protocol.begin.flax</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.protocol.end.flax</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(protocol)(&lt;)</string>
			<key>name</key>
			<string>meta.protocol.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>range-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\.\.(?:\.)?(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.range.flax</string>
		</dict>
		<key>remainder-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\%(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>keyword.operator.remainder.flax</string>
		</dict>
		<key>shebang-line</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.line.shebang.flax</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Shebang line</string>
			<key>match</key>
			<string>^(#!).*$</string>
			<key>name</key>
			<string>comment.line.shebang.flax</string>
		</dict>
		<key>special-literal</key>
		<dict>
			<key>match</key>
			<string>\b__(FILE|LINE|COLUMN|FUNCTION)__\b</string>
			<key>name</key>
			<string>keyword.other.literal.flax</string>
		</dict>
		<key>storage-type</key>
		<dict>
			<key>match</key>
			<string>\b(var|let|fn|ƒ|class|alloc|dealloc|enum|struct|protocol|extension|typealias|namespace)\b</string>
			<key>name</key>
			<string>storage.type.flax</string>
		</dict>
		<key>access-modifier</key>
		<dict>
			<key>match</key>
			<string>\b(public|internal|private|global)\b</string>
			<key>name</key>
			<string>storage.modifier.attribute.flax</string>
		</dict>
		<key>string-literal</key>
		<dict>
			<key>begin</key>
			<string>\"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.flax</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.flax</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.literal.string.flax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\([0tnr\"\'\\]|x\h{2}|u\h{4}|U\h{8})</string>
					<key>name</key>
					<string>constant.character.escape.flax</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\\\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.punctuation.expression.begin.flax</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.expression.flax</string>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.punctuation.expression.end.flax</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.flax</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(\"|\\)</string>
					<key>name</key>
					<string>invalid.illegal.flax</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(.)</string>
					<key>name</key>
					<string>string.quoted.double.flax</string>
				</dict>
			</array>
		</dict>
		<key>switch-statement-keyword</key>
		<dict>
			<key>comment</key>
			<string>switch-statement</string>
			<key>match</key>
			<string>\b(switch|case|default|where)\b</string>
			<key>name</key>
			<string>keyword.control.switch.flax</string>
		</dict>
		<key>ternary-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=[\s(\[{,;:])(\?|:)(?=[\s)\]},;:])</string>
			<key>name</key>
			<string>keyword.operator.ternary.flax</string>
		</dict>
		<key>type</key>
		<dict>
			<key>comment</key>
			<string>type</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#primitive-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#collection-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#optional-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>protocol-composition-type</string>
				</dict>
			</array>
		</dict>
		<key>type-casting-operator</key>
		<dict>
			<key>match</key>
			<string>\b(is\b|(\*)+|as(\?\B|\b))</string>
			<key>name</key>
			<string>keyword.operator.type-casting.flax</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.flax</string>
	<key>uuid</key>
	<string>01F83091-8C09-436C-8CE7-1B9F734A2955</string>
</dict>
</plist>
