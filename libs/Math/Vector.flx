// Vector.flx
// Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

namespace Math
{
	public struct Vector2
	{
		var x: Double
		var y: Double

		operator + (other: Math.Vector2) -> Math.Vector2
		{
			var ret: Math.Vector2
			ret.x = self.x + other.x
			ret.y = self.y + other.y

			return ret
		}

		operator - (other: Math.Vector2) -> Math.Vector2
		{
			var ret: Math.Vector2
			ret.x = self.x - other.x
			ret.y = self.y - other.y

			return ret
		}

		@precedence[90]
		operator • (other: Math.Vector2) -> Double
		{
			return self.x * other.x + self.y * other.y
		}
	}

	public struct Vector3
	{
		var x: Double
		var y: Double
		var z: Double

		@precedence[90]
		operator • (other: Math.Vector3) -> Double
		{
			return (self.x * other.x) + (self.y * other.y) + (self.z * other.z)
		}
	}

	public class Complex
	{
		public class Cmplx
		{
			var r: Double
			var i: Double
		}
	}
}
