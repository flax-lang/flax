// Unicode.flx
// Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

import LibCInterface

public func Utf8Length(_text: Int8*) -> Uint64
{
	var len = 0
	var text = _text


	while #text != 0
	{
		if (#text & 0xC0) != 0x80
		{
			len += 1
		}

		text = text + 1
	}

	return len
}

// returns a pointer to the beginning of the pos'th utf8 codepoint
// in the buffer at s
func Utf8Index(_text: Int8*, var pos: Uint64) -> Int8*
{
	pos += 1
	var text = _text

	while #text != 0
	{
		if (#text & 0xC0) != 0x80
		{
			pos -= 1
		}

		if pos == 0
		{
			return text
		}

		text = text + 1
	}

	return 0 as Int8*
}

// // converts codepoint indexes start and end to byte offsets in the buffer at s
// void utf8slice(char *s, ssize_t *start, ssize_t *end)
// {
// 	char *p = utf8index(s, *start);
// 	*start = p ? p - s : -1;
// 	p = utf8index(s, *end);
// 	*end = p ? p - s : -1;
// }

// appends the utf8 string at src to dest
// char *utf8cat(char *dest, char *src)
// {
// 	return strcat(dest, src);
// }







