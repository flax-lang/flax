// Keyboard.flx
// Copyright (c) 2014 - 2016, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.

public namespace SDL
{
	public enum Key: u32
	{
		case UNKNOWN			= 0

		case Backspace			= 0x08
		case Tab				= 0x09
		case Return				= 0x0D
		case Escape				= 0x1B

		case Space				= 0x20
		case Exclaim
		case DoubleQuote
		case Hash
		case Dollar
		case Percent
		case Ampersand
		case Quote
		case LeftParen
		case RightParen
		case Asterisk
		case Plus
		case Comma
		case Minus
		case Period
		case Slash
		case Zero
		case One
		case Two
		case Three
		case Four
		case Five
		case Six
		case Seven
		case Eight
		case Nine
		case Ten
		case Colon
		case Semicolon
		case Less
		case Equals
		case Greater
		case Question
		case At

		// Skip uppercase letters
		case LeftBracket
		case Backslash
		case RightBracket
		case Caret
		case Underscore
		case Backquote
		case A					= 0x61
		case B
		case C
		case D
		case E
		case F
		case G
		case H
		case I
		case J
		case K
		case L
		case M
		case N
		case O
		case P
		case Q
		case R
		case S
		case T
		case U
		case V
		case W
		case X
		case Y
		case Z

		/*CAPSLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK),

		F1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1),
		F2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2),
		F3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3),
		F4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4),
		F5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5),
		F6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6),
		F7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7),
		F8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8),
		F9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9),
		F10 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10),
		F11 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11),
		F12 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12),

		PRINTSCREEN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN),
		SCROLLLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK),
		PAUSE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE),
		INSERT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT),
		HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME),
		PAGEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP),
		DELETE = '\177',
		END = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END),
		PAGEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN),
		RIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT),
		LEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT),
		DOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN),
		UP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP),

		NUMLOCKCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR),
		KP_DIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE),
		KP_MULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY),
		KP_MINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS),
		KP_PLUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS),
		KP_ENTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER),
		KP_1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1),
		KP_2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2),
		KP_3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3),
		KP_4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4),
		KP_5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5),
		KP_6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6),
		KP_7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7),
		KP_8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8),
		KP_9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9),
		KP_0 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0),
		KP_PERIOD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD),

		APPLICATION = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION),
		POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER),
		KP_EQUALS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS),
		F13 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13),
		F14 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14),
		F15 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15),
		F16 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16),
		F17 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17),
		F18 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18),
		F19 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19),
		F20 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20),
		F21 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21),
		F22 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22),
		F23 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23),
		F24 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24),
		EXECUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE),
		HELP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP),
		MENU = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU),
		SELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT),
		STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP),
		AGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN),
		UNDO = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO),
		CUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT),
		COPY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY),
		PASTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE),
		FIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND),
		MUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE),
		VOLUMEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP),
		VOLUMEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN),
		KP_COMMA = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA),
		KP_EQUALSAS400 =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400),

		ALTERASE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE),
		SYSREQ = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ),
		CANCEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL),
		CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR),
		PRIOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR),
		RETURN2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2),
		SEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR),
		OUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT),
		OPER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER),
		CLEARAGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN),
		CRSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL),
		EXSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL),

		KP_00 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00),
		KP_000 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000),
		THOUSANDSSEPARATOR =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR),
		DECIMALSEPARATOR =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR),
		CURRENCYUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT),
		CURRENCYSUBUNIT =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT),
		KP_LEFTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN),
		KP_RIGHTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN),
		KP_LEFTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE),
		KP_RIGHTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE),
		KP_TAB = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB),
		KP_BACKSPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE),
		KP_A = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A),
		KP_B = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B),
		KP_C = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C),
		KP_D = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D),
		KP_E = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E),
		KP_F = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F),
		KP_XOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR),
		KP_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER),
		KP_PERCENT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT),
		KP_LESS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS),
		KP_GREATER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER),
		KP_AMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND),
		KP_DBLAMPERSAND =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND),
		KP_VERTICALBAR =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR),
		KP_DBLVERTICALBAR =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR),
		KP_COLON = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON),
		KP_HASH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH),
		KP_SPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE),
		KP_AT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT),
		KP_EXCLAM = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM),
		KP_MEMSTORE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE),
		KP_MEMRECALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL),
		KP_MEMCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR),
		KP_MEMADD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD),
		KP_MEMSUBTRACT =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT),
		KP_MEMMULTIPLY =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY),
		KP_MEMDIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE),
		KP_PLUSMINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS),
		KP_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR),
		KP_CLEARENTRY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY),
		KP_BINARY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY),
		KP_OCTAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL),
		KP_DECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL),
		KP_HEXADECIMAL =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL),

		LCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL),
		LSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT),
		LALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT),
		LGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI),
		RCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL),
		RSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT),
		RALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT),
		RGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI),

		MODE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE),

		AUDIONEXT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT),
		AUDIOPREV = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV),
		AUDIOSTOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP),
		AUDIOPLAY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY),
		AUDIOMUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE),
		MEDIASELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT),
		WWW = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW),
		MAIL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL),
		CALCULATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR),
		COMPUTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER),
		AC_SEARCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH),
		AC_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME),
		AC_BACK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK),
		AC_FORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD),
		AC_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP),
		AC_REFRESH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH),
		AC_BOOKMARKS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS),

		BRIGHTNESSDOWN =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSDOWN),
		BRIGHTNESSUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP),
		DISPLAYSWITCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH),
		KBDILLUMTOGGLE =
		SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMTOGGLE),
		KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN),
		KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP),
		EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT),
		SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP)*/
	}
}

// #define SCANCODE_MASK (1<<30)
// #define SDL_SCANCODE_TO_KEYCODE(X)  (X | SCANCODE_MASK)

// enum
// {
// };

// /**
//  * \brief Enumeration of valid key mods (possibly OR'd together).
//  */
// typedef enum
// {
//     KMOD_NONE = 0x0000,
//     KMOD_LSHIFT = 0x0001,
//     KMOD_RSHIFT = 0x0002,
//     KMOD_LCTRL = 0x0040,
//     KMOD_RCTRL = 0x0080,
//     KMOD_LALT = 0x0100,
//     KMOD_RALT = 0x0200,
//     KMOD_LGUI = 0x0400,
//     KMOD_RGUI = 0x0800,
//     KMOD_NUM = 0x1000,
//     KMOD_CAPS = 0x2000,
//     KMOD_MODE = 0x4000,
//     KMOD_RESERVED = 0x8000
// } SDL_Keymod;

// #define KMOD_CTRL   (KMOD_LCTRL|KMOD_RCTRL)
// #define KMOD_SHIFT  (KMOD_LSHIFT|KMOD_RSHIFT)
// #define KMOD_ALT    (KMOD_LALT|KMOD_RALT)
// #define KMOD_GUI    (KMOD_LGUI|KMOD_RGUI)
